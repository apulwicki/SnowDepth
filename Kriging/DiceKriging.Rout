
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> #residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  9181.425 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  610.988 600.2356 594.0928 585.8096 583.472 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -610.99  |proj g|=      0.18891
At iterate     1  f =      -627.73  |proj g|=      0.013849
At iterate     2  f =      -627.73  |proj g|=      0.013552
At iterate     3  f =      -627.73  |proj g|=      0.020764
At iterate     4  f =      -627.73  |proj g|=     0.0062033

iterations 4
function evaluations 10
segments explored during Cauchy searches 6
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0062033
final function value -627.728

F = -627.728
final  value -627.728434 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -600.24  |proj g|=     0.059483
At iterate     1  f =      -617.13  |proj g|=      0.010271
ys=-5.109e+01  -gs= 6.772e+00, BFGS update SKIPPED
At iterate     2  f =      -620.08  |proj g|=     0.0052907
At iterate     3  f =      -620.11  |proj g|=     0.0046663
At iterate     4  f =      -620.11  |proj g|=       0.99873
At iterate     5  f =      -620.11  |proj g|=     0.0046086
At iterate     6  f =      -620.11  |proj g|=     0.0099637

iterations 6
function evaluations 15
segments explored during Cauchy searches 8
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0099637
final function value -620.11

F = -620.11
final  value -620.110005 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -594.09  |proj g|=      0.19182
At iterate     1  f =      -614.44  |proj g|=      0.013996
ys=-7.344e+01  -gs= 8.963e+00, BFGS update SKIPPED
At iterate     2  f =      -621.67  |proj g|=     0.0051561
At iterate     3  f =      -621.67  |proj g|=       0.99801
At iterate     4  f =      -621.67  |proj g|=     0.0050476
At iterate     5  f =      -621.67  |proj g|=     0.0050468

iterations 5
function evaluations 16
segments explored during Cauchy searches 7
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00504677
final function value -621.668

F = -621.668
final  value -621.668076 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -585.81  |proj g|=      0.30654
At iterate     1  f =      -606.49  |proj g|=      0.022231
ys=-7.723e+01  -gs= 1.040e+01, BFGS update SKIPPED
At iterate     2  f =       -619.6  |proj g|=     0.0062629
ys=-1.070e+01  -gs= 6.350e+00, BFGS update SKIPPED
At iterate     3  f =      -619.81  |proj g|=       0.99892
At iterate     4  f =      -619.82  |proj g|=     0.0047806
At iterate     5  f =      -619.83  |proj g|=     0.0045564
At iterate     6  f =      -619.83  |proj g|=       0.99883
At iterate     7  f =      -619.83  |proj g|=     0.0062185

iterations 7
function evaluations 17
segments explored during Cauchy searches 10
BFGS updates skipped 2
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0062185
final function value -619.825

F = -619.825
final  value -619.825444 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -583.47  |proj g|=     0.079546
At iterate     1  f =      -592.65  |proj g|=     0.0057991
ys=-5.996e+01  -gs= 2.830e+00, BFGS update SKIPPED
At iterate     2  f =      -605.59  |proj g|=     0.0048931
ys=-5.222e+01  -gs= 4.580e+00, BFGS update SKIPPED
At iterate     3  f =      -610.27  |proj g|=     0.0021947
At iterate     4  f =      -610.28  |proj g|=     0.0021056
At iterate     5  f =      -610.28  |proj g|=       0.99993
At iterate     6  f =      -610.28  |proj g|=     0.0020982

iterations 6
function evaluations 21
segments explored during Cauchy searches 9
BFGS updates skipped 2
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00209823
final function value -610.277

F = -610.277
final  value -610.277294 
converged

* The 5 best values (multistart) obtained are:
 -627.7284 -620.11 -621.6681 -619.8254 -610.2773 
* The model corresponding to the best one (-627.7284) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"SK")
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
+          pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
+          fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> #  writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
> #           pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
> #           fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
 19.856   0.200  20.057 
