
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> #residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  7318.149 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  516.9991 488.9858 461.4341 458.7585 456.5126 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=         -517  |proj g|=      0.15966
At iterate     1  f =      -519.62  |proj g|=       0.10582
At iterate     2  f =      -519.78  |proj g|=      0.092851
At iterate     3  f =      -519.78  |proj g|=       0.15635
At iterate     4  f =      -519.78  |proj g|=       0.02289
At iterate     5  f =      -519.78  |proj g|=      0.051707
At iterate     6  f =      -519.78  |proj g|=      0.092535
At iterate     7  f =      -519.78  |proj g|=      0.092677
At iterate     8  f =      -519.78  |proj g|=      0.092902
At iterate     9  f =      -519.78  |proj g|=      0.093263
At iterate    10  f =      -519.78  |proj g|=      0.093831
At iterate    11  f =      -519.79  |proj g|=      0.094704
At iterate    12  f =       -519.8  |proj g|=      0.096004
At iterate    13  f =      -519.83  |proj g|=      0.097692
At iterate    14  f =      -519.89  |proj g|=      0.099071
At iterate    15  f =      -520.02  |proj g|=      0.097631
At iterate    16  f =      -520.26  |proj g|=      0.085189
At iterate    17  f =      -520.29  |proj g|=       0.92185
At iterate    18  f =      -520.29  |proj g|=      0.094406
At iterate    19  f =      -520.29  |proj g|=      0.001773
At iterate    20  f =      -520.29  |proj g|=     0.0027694

iterations 20
function evaluations 25
segments explored during Cauchy searches 21
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00276943
final function value -520.29

F = -520.29
final  value -520.289715 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -488.99  |proj g|=    0.0040719
At iterate     1  f =      -488.99  |proj g|=     0.0038464
At iterate     2  f =      -488.99  |proj g|=             1
At iterate     3  f =      -488.99  |proj g|=             1

iterations 3
function evaluations 6
segments explored during Cauchy searches 4
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.999995
final function value -488.992

F = -488.992
final  value -488.992121 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -461.43  |proj g|=     0.046758
At iterate     1  f =      -492.26  |proj g|=      0.026746
ys=-1.209e+02  -gs= 1.413e+01, BFGS update SKIPPED
At iterate     2  f =       -504.4  |proj g|=     0.0071947
At iterate     3  f =      -504.42  |proj g|=     0.0062053
At iterate     4  f =      -504.42  |proj g|=       0.99955
At iterate     5  f =      -504.42  |proj g|=     0.0061163
At iterate     6  f =      -504.42  |proj g|=      0.048303

iterations 6
function evaluations 17
segments explored during Cauchy searches 9
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0483026
final function value -504.417

F = -504.417
final  value -504.417234 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -458.76  |proj g|=      0.46565
At iterate     1  f =      -478.85  |proj g|=       0.29835
At iterate     2  f =      -514.38  |proj g|=      0.021617
At iterate     3  f =       -514.4  |proj g|=      0.020126
At iterate     4  f =       -514.4  |proj g|=       0.20039
At iterate     5  f =       -514.4  |proj g|=      0.008865
At iterate     6  f =       -514.4  |proj g|=      0.020903

iterations 6
function evaluations 15
segments explored during Cauchy searches 9
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0209031
final function value -514.4

F = -514.4
final  value -514.400238 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -456.51  |proj g|=    0.0079634
At iterate     1  f =      -476.32  |proj g|=     0.0098001
ys=-9.922e+01  -gs= 7.232e+00, BFGS update SKIPPED
At iterate     2  f =      -486.21  |proj g|=             1
At iterate     3  f =      -486.51  |proj g|=     0.0037219
At iterate     4  f =      -486.52  |proj g|=     0.0035908
At iterate     5  f =      -486.52  |proj g|=             1
At iterate     6  f =      -486.52  |proj g|=     0.0034883
At iterate     7  f =      -486.52  |proj g|=             1

iterations 7
function evaluations 19
segments explored during Cauchy searches 9
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.999998
final function value -486.518

F = -486.518
final  value -486.518077 
converged

* The 5 best values (multistart) obtained are:
 -520.2897 -488.9921 -504.4172 -514.4002 -486.5181 
* The model corresponding to the best one (-520.2897) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  #LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"UK", se.compute = TRUE)
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> STD = matrix(pred.m$sd, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> #writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
> #         pred=pred, lower95=lower95, upper95=upper95, STD = STD, model = model, LOO = LOO,
> #         fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
+            pred=pred, lower95=lower95, upper95=upper95, STD = STD, model = model, LOO = LOO,
+            fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
 14.470   3.081  26.736 
