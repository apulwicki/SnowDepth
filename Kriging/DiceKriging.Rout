
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> #residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  7318.149 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  363.2398 357.1673 352.6412 346.2456 344.2564 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -363.24  |proj g|=     0.013493
At iterate     1  f =      -380.99  |proj g|=      0.014482
ys=-7.678e+01  -gs= 6.818e+00, BFGS update SKIPPED
At iterate     2  f =      -386.47  |proj g|=       0.99988
At iterate     3  f =      -386.47  |proj g|=     0.0045696
At iterate     4  f =      -386.47  |proj g|=     0.0045621
At iterate     5  f =      -386.47  |proj g|=       0.11648

iterations 5
function evaluations 13
segments explored during Cauchy searches 7
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.116485
final function value -386.475

F = -386.475
final  value -386.474992 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -357.17  |proj g|=     0.059194
At iterate     1  f =      -379.59  |proj g|=      0.019109
ys=-8.536e+01  -gs= 1.202e+01, BFGS update SKIPPED
At iterate     2  f =      -390.23  |proj g|=     0.0051233
At iterate     3  f =      -390.23  |proj g|=      0.005107
At iterate     4  f =      -390.23  |proj g|=       0.02389

iterations 4
function evaluations 15
segments explored during Cauchy searches 6
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0238899
final function value -390.232

F = -390.232
final  value -390.231792 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -352.64  |proj g|=     0.041252
At iterate     1  f =      -374.69  |proj g|=      0.015882
ys=-7.910e+01  -gs= 1.197e+01, BFGS update SKIPPED
At iterate     2  f =      -388.08  |proj g|=       0.99978
At iterate     3  f =      -388.08  |proj g|=     0.0047839
At iterate     4  f =      -388.08  |proj g|=     0.0047826

iterations 4
function evaluations 14
segments explored during Cauchy searches 6
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00478265
final function value -388.082

F = -388.082
final  value -388.082392 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -346.25  |proj g|=      0.20677
At iterate     1  f =       -378.1  |proj g|=      0.021487
ys=-8.093e+01  -gs= 2.133e+01, BFGS update SKIPPED
At iterate     2  f =      -392.33  |proj g|=       0.99891
At iterate     3  f =      -392.35  |proj g|=     0.0055331
At iterate     4  f =      -392.35  |proj g|=     0.0055108
At iterate     5  f =      -392.35  |proj g|=      0.010862

iterations 5
function evaluations 15
segments explored during Cauchy searches 7
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0108616
final function value -392.35

F = -392.35
final  value -392.350045 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -344.26  |proj g|=      0.05971
At iterate     1  f =      -369.92  |proj g|=      0.013994
ys=-7.154e+01  -gs= 1.402e+01, BFGS update SKIPPED
At iterate     2  f =      -386.44  |proj g|=     0.0097706
ys=-3.334e+01  -gs= 6.086e+00, BFGS update SKIPPED
At iterate     3  f =      -387.27  |proj g|=     0.0061819
At iterate     4  f =      -387.34  |proj g|=     0.0048234
At iterate     5  f =      -387.34  |proj g|=       0.99983
At iterate     6  f =      -387.34  |proj g|=      0.004681
At iterate     7  f =      -387.34  |proj g|=       0.12548

iterations 7
function evaluations 18
segments explored during Cauchy searches 10
BFGS updates skipped 2
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.12548
final function value -387.344

F = -387.344
final  value -387.344396 
converged

* The 5 best values (multistart) obtained are:
 -386.475 -390.2318 -388.0824 -392.35 -387.3444 
* The model corresponding to the best one (-392.35) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"SK")
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
+          pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
+          fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> #  writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
> #           pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
> #           fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
  9.292   0.056   9.345 
