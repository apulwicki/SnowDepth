
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> #residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  9181.425 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  559.602 524.2358 518.643 517.8075 516.9362 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=       -559.6  |proj g|=       0.3854
At iterate     1  f =      -561.46  |proj g|=       0.25597
At iterate     2  f =      -561.53  |proj g|=       0.78335
At iterate     3  f =      -561.54  |proj g|=       0.16536
At iterate     4  f =      -561.54  |proj g|=      0.005049
At iterate     5  f =      -561.54  |proj g|=    0.00031184

iterations 5
function evaluations 7
segments explored during Cauchy searches 6
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.000311838
final function value -561.539

F = -561.539
final  value -561.539341 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -524.24  |proj g|=      0.51216
At iterate     1  f =      -530.37  |proj g|=       0.33361
At iterate     2  f =      -548.61  |proj g|=       0.02439
ys=-5.502e+01  -gs= 1.016e+01, BFGS update SKIPPED
At iterate     3  f =      -552.91  |proj g|=     0.0059024
At iterate     4  f =      -552.92  |proj g|=     0.0054979
At iterate     5  f =      -552.92  |proj g|=       0.71659
At iterate     6  f =      -552.92  |proj g|=     0.0054608
At iterate     7  f =      -552.92  |proj g|=     0.0053228

iterations 7
function evaluations 19
segments explored during Cauchy searches 11
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00532283
final function value -552.925

F = -552.925
final  value -552.924704 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -518.64  |proj g|=      0.40569
At iterate     1  f =       -523.2  |proj g|=       0.26211
At iterate     2  f =      -535.23  |proj g|=      0.019081
ys=-4.599e+01  -gs= 7.231e+00, BFGS update SKIPPED
At iterate     3  f =      -546.06  |proj g|=     0.0035996
At iterate     4  f =      -546.07  |proj g|=     0.0034699
At iterate     5  f =      -546.07  |proj g|=       0.99933
At iterate     6  f =      -546.07  |proj g|=     0.0034595

iterations 6
function evaluations 18
segments explored during Cauchy searches 10
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00345954
final function value -546.066

F = -546.066
final  value -546.066253 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -517.81  |proj g|=       0.2066
At iterate     1  f =      -524.53  |proj g|=      0.044873
At iterate     2  f =      -531.64  |proj g|=     0.0030627
ys=-8.078e+01  -gs= 1.626e+00, BFGS update SKIPPED
At iterate     3  f =      -538.56  |proj g|=     0.0024691
ys=-1.247e+01  -gs= 2.915e+00, BFGS update SKIPPED
At iterate     4  f =      -538.87  |proj g|=     0.0019133
At iterate     5  f =      -538.88  |proj g|=     0.0017719
At iterate     6  f =      -538.88  |proj g|=       0.99993
At iterate     7  f =      -538.88  |proj g|=     0.0017631
At iterate     8  f =      -538.88  |proj g|=       0.99993

iterations 8
function evaluations 24
segments explored during Cauchy searches 12
BFGS updates skipped 2
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.999927
final function value -538.878

F = -538.878
final  value -538.878236 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -516.94  |proj g|=      0.47843
At iterate     1  f =      -522.68  |proj g|=       0.30711
At iterate     2  f =      -535.93  |proj g|=      0.022315
ys=-4.719e+01  -gs= 8.593e+00, BFGS update SKIPPED
At iterate     3  f =      -546.84  |proj g|=       0.99918
At iterate     4  f =      -546.84  |proj g|=     0.0036768
At iterate     5  f =      -546.84  |proj g|=     0.0036711
At iterate     6  f =      -546.84  |proj g|=     0.0036708

iterations 6
function evaluations 18
segments explored during Cauchy searches 9
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0036708
final function value -546.84

F = -546.84
final  value -546.840195 
converged

* The 5 best values (multistart) obtained are:
 -561.5393 -552.9247 -546.0663 -538.8782 -546.8402 
* The model corresponding to the best one (-561.5393) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"SK")
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
+          pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
+          fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> #  writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
> #           pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
> #           fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
 19.720   0.136  19.855 
