
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> #residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  7318.149 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  434.1828 431.1983 423.6739 423.1772 405.3787 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -434.18  |proj g|=     0.012819
At iterate     1  f =      -450.24  |proj g|=     0.0097956
ys=-3.287e+01  -gs= 5.643e+00, BFGS update SKIPPED
At iterate     2  f =      -451.07  |proj g|=     0.0065865
At iterate     3  f =      -451.16  |proj g|=     0.0052322
At iterate     4  f =      -451.16  |proj g|=        0.9999
At iterate     5  f =      -451.16  |proj g|=     0.0050625
At iterate     6  f =      -451.16  |proj g|=       0.16777

iterations 6
function evaluations 13
segments explored during Cauchy searches 8
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.167772
final function value -451.16

F = -451.16
final  value -451.160310 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=       -431.2  |proj g|=    0.0077463
At iterate     1  f =      -440.78  |proj g|=             1
At iterate     2  f =      -440.79  |proj g|=     0.0036189
At iterate     3  f =      -440.79  |proj g|=     0.0036068
At iterate     4  f =      -440.79  |proj g|=             1

iterations 4
function evaluations 12
segments explored during Cauchy searches 5
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.999995
final function value -440.795

F = -440.795
final  value -440.794878 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -423.67  |proj g|=      0.11934
At iterate     1  f =      -448.81  |proj g|=      0.024557
ys=-9.145e+01  -gs= 1.422e+01, BFGS update SKIPPED
At iterate     2  f =      -458.51  |proj g|=     0.0072225
At iterate     3  f =      -458.53  |proj g|=     0.0062658
At iterate     4  f =      -458.53  |proj g|=       0.99873
At iterate     5  f =      -458.53  |proj g|=      0.006178
At iterate     6  f =      -458.53  |proj g|=      0.017403

iterations 6
function evaluations 17
segments explored during Cauchy searches 9
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0174025
final function value -458.528

F = -458.528
final  value -458.528305 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -423.18  |proj g|=      0.06717
At iterate     1  f =      -445.19  |proj g|=      0.021049
ys=-8.961e+01  -gs= 1.148e+01, BFGS update SKIPPED
At iterate     2  f =      -456.35  |proj g|=     0.0058623
At iterate     3  f =      -456.35  |proj g|=     0.0058012
At iterate     4  f =      -456.35  |proj g|=       0.05651

iterations 4
function evaluations 15
segments explored during Cauchy searches 6
BFGS updates skipped 1
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0565098
final function value -456.353

F = -456.353
final  value -456.353243 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -405.38  |proj g|=       0.2809
At iterate     1  f =      -441.86  |proj g|=      0.022807
ys=-7.957e+01  -gs= 2.739e+01, BFGS update SKIPPED
At iterate     2  f =      -458.46  |proj g|=     0.0082634
ys=-3.487e+00  -gs= 7.585e+00, BFGS update SKIPPED
At iterate     3  f =      -458.52  |proj g|=     0.0063342
At iterate     4  f =      -458.52  |proj g|=       0.99874
At iterate     5  f =      -458.52  |proj g|=     0.0061773
At iterate     6  f =      -458.52  |proj g|=      0.034094

iterations 6
function evaluations 17
segments explored during Cauchy searches 9
BFGS updates skipped 2
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.0340939
final function value -458.522

F = -458.522
final  value -458.522168 
converged

* The 5 best values (multistart) obtained are:
 -451.1603 -440.7949 -458.5283 -456.3532 -458.5222 
* The model corresponding to the best one (-458.5283) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"SK")
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
+          pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
+          fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> #  writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
> #           pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
> #           fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
  9.504   0.048   9.552 
