
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ############################################################################
> #Dice Kriging
> ############################################################################
> 
> ## Libraries
> library(R.matlab)
R.matlab v3.6.1 (2016-10-19) successfully loaded. See ?R.matlab for help.

Attaching package: ‘R.matlab’

The following objects are masked from ‘package:base’:

    getOption, isOpen

> library(DiceKriging)
> library(DiceOptim)
> library(foreach)
> 
> 
> ## Load my data ##
> #residuals = readMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/residuals.mat')
> residuals = readMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/residuals.mat')
> res = residuals$res
> utm = data.frame(residuals$utm)
> sizexy = residuals$sizexy
> 
> ## Model ##
> m = km(~1,design = utm, response = res, covtype = "matern5_2", nugget.estim = TRUE, multistart = 5, iso = TRUE)

optimisation start
------------------
* estimation method   : MLE 
* optimisation method : BFGS 
* analytical gradient : used
* trend model : ~1
* covariance model : 
  - type :  matern5_2 
  - nugget : unknown homogenous nugget effect 
  - parameters lower bounds :  1e-10 
  - parameters upper bounds :  3968.421 
  - upper bound for alpha   :  1 
  - best initial criterion value(s) :  158.6845 152.9804 152.5773 152.1044 150.8869 

N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -158.68  |proj g|=      0.93574
At iterate     1  f =       -173.9  |proj g|=       0.54189
At iterate     2  f =      -174.33  |proj g|=       0.49197
At iterate     3  f =      -174.56  |proj g|=       0.14109
At iterate     4  f =      -174.56  |proj g|=     0.0075015
At iterate     5  f =      -174.56  |proj g|=     0.0075051
At iterate     6  f =      -174.56  |proj g|=     0.0089182
At iterate     7  f =      -174.56  |proj g|=       0.02426
At iterate     8  f =      -174.56  |proj g|=      0.048891
At iterate     9  f =      -174.56  |proj g|=      0.088868
At iterate    10  f =      -174.56  |proj g|=       0.15346
At iterate    11  f =      -174.56  |proj g|=       0.25775
At iterate    12  f =      -174.56  |proj g|=       0.42821
At iterate    13  f =      -174.57  |proj g|=       0.58736
At iterate    14  f =      -174.57  |proj g|=       0.59269
At iterate    15  f =      -174.58  |proj g|=        0.6012
At iterate    16  f =      -174.61  |proj g|=       0.61304
At iterate    17  f =      -174.67  |proj g|=       0.62294
At iterate    18  f =      -174.69  |proj g|=       0.40676
At iterate    19  f =      -174.71  |proj g|=      0.043134
At iterate    20  f =      -174.71  |proj g|=     0.0026344
At iterate    21  f =      -174.71  |proj g|=    4.1687e-06
At iterate    22  f =      -174.71  |proj g|=    3.6911e-07

iterations 22
function evaluations 25
segments explored during Cauchy searches 23
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 3.69115e-07
final function value -174.71

F = -174.71
final  value -174.709720 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -152.98  |proj g|=      0.98491
At iterate     1  f =       -173.9  |proj g|=       0.54251
At iterate     2  f =      -174.26  |proj g|=       0.50479
At iterate     3  f =      -174.64  |proj g|=       0.18185
At iterate     4  f =      -174.64  |proj g|=      0.011253
At iterate     5  f =      -174.64  |proj g|=     0.0050875
At iterate     6  f =      -174.64  |proj g|=     0.0050891

iterations 6
function evaluations 8
segments explored during Cauchy searches 7
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00508909
final function value -174.637

F = -174.637
final  value -174.636615 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -152.58  |proj g|=      0.94736
At iterate     1  f =      -161.86  |proj g|=       0.59509
At iterate     2  f =      -166.98  |proj g|=        0.2508
At iterate     3  f =       -167.9  |proj g|=       0.16632
At iterate     4  f =      -168.37  |proj g|=       0.11056
At iterate     5  f =      -168.54  |proj g|=      0.073609
At iterate     6  f =      -168.54  |proj g|=      0.069338
At iterate     7  f =      -168.54  |proj g|=      0.013996
At iterate     8  f =      -168.54  |proj g|=     0.0098877
At iterate     9  f =      -168.54  |proj g|=     0.0098888
At iterate    10  f =      -168.54  |proj g|=      0.027561
At iterate    11  f =      -168.54  |proj g|=      0.055876
At iterate    12  f =      -168.54  |proj g|=      0.069245
At iterate    13  f =      -168.54  |proj g|=        0.0695
At iterate    14  f =      -168.54  |proj g|=      0.069918
At iterate    15  f =      -168.54  |proj g|=       0.07061
At iterate    16  f =      -168.54  |proj g|=      0.071777
At iterate    17  f =      -168.54  |proj g|=      0.073779
At iterate    18  f =      -168.55  |proj g|=       0.07731
At iterate    19  f =      -168.57  |proj g|=      0.083818
At iterate    20  f =      -168.61  |proj g|=      0.096825
At iterate    21  f =      -168.75  |proj g|=       0.12771
At iterate    22  f =      -172.16  |proj g|=       0.61389
At iterate    23  f =      -172.67  |proj g|=       0.52864
At iterate    24  f =      -174.58  |proj g|=       0.45273
At iterate    25  f =      -174.71  |proj g|=       0.57316
At iterate    26  f =      -174.71  |proj g|=      0.070278
At iterate    27  f =      -174.71  |proj g|=     0.0016792
At iterate    28  f =      -174.71  |proj g|=    0.00028455
At iterate    29  f =      -174.71  |proj g|=    0.00014452

iterations 29
function evaluations 39
segments explored during Cauchy searches 33
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.000144521
final function value -174.71

F = -174.71
final  value -174.709720 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=       -152.1  |proj g|=      0.98758
At iterate     1  f =      -169.63  |proj g|=       0.56816
At iterate     2  f =      -170.83  |proj g|=       0.49062
At iterate     3  f =      -172.82  |proj g|=       0.84234
At iterate     4  f =       -173.1  |proj g|=      0.075396
At iterate     5  f =       -173.1  |proj g|=      0.025535
At iterate     6  f =       -173.1  |proj g|=      0.011706
At iterate     7  f =       -173.1  |proj g|=      0.011702
At iterate     8  f =       -173.1  |proj g|=       0.04023
At iterate     9  f =       -173.1  |proj g|=      0.078551
At iterate    10  f =       -173.1  |proj g|=       0.15051
At iterate    11  f =       -173.1  |proj g|=       0.26161
At iterate    12  f =       -173.1  |proj g|=       0.44711
At iterate    13  f =       -173.1  |proj g|=       0.75195
At iterate    14  f =       -173.1  |proj g|=       0.79116
At iterate    15  f =      -173.12  |proj g|=       0.79646
At iterate    16  f =      -173.15  |proj g|=       0.80323
At iterate    17  f =      -173.25  |proj g|=        0.8089
At iterate    18  f =       -173.5  |proj g|=       0.80272
At iterate    19  f =      -173.94  |proj g|=       0.76073
At iterate    20  f =      -174.42  |proj g|=       0.68894
At iterate    21  f =      -174.69  |proj g|=       0.63139
At iterate    22  f =      -174.71  |proj g|=       0.23845
At iterate    23  f =      -174.71  |proj g|=      0.031809
At iterate    24  f =      -174.71  |proj g|=     0.0042106
At iterate    25  f =      -174.71  |proj g|=     0.0041937

iterations 25
function evaluations 28
segments explored during Cauchy searches 26
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 0.00419373
final function value -174.71

F = -174.71
final  value -174.709720 
converged
N = 2, M = 5 machine precision = 2.22045e-16
At X0, 0 variables are exactly at the bounds
At iterate     0  f=      -150.89  |proj g|=      0.97209
At iterate     1  f =      -165.76  |proj g|=      0.071446
At iterate     2  f =      -165.96  |proj g|=      0.047559
At iterate     3  f =      -165.98  |proj g|=      0.039636
At iterate     4  f =      -165.98  |proj g|=      0.070714
At iterate     5  f =      -165.98  |proj g|=     0.0069535
At iterate     6  f =      -165.98  |proj g|=       0.21434
At iterate     7  f =      -165.98  |proj g|=       0.96285
At iterate     8  f =      -165.99  |proj g|=       0.96499
At iterate     9  f =      -166.02  |proj g|=       0.96846
At iterate    10  f =       -166.1  |proj g|=       0.97317
At iterate    11  f =      -166.36  |proj g|=       0.97921
At iterate    12  f =      -167.08  |proj g|=       0.98121
At iterate    13  f =      -168.02  |proj g|=       0.97309
At iterate    14  f =      -169.94  |proj g|=       0.94633
At iterate    15  f =      -170.89  |proj g|=        0.9255
At iterate    16  f =      -171.75  |proj g|=       0.87474
At iterate    17  f =      -172.49  |proj g|=       0.41341
At iterate    18  f =       -174.6  |proj g|=       0.44557
At iterate    19  f =       -174.7  |proj g|=       0.41183
At iterate    20  f =      -174.71  |proj g|=      0.027528
At iterate    21  f =      -174.71  |proj g|=       0.16502
At iterate    22  f =      -174.71  |proj g|=      0.020367
At iterate    23  f =      -174.71  |proj g|=    0.00064098
At iterate    24  f =      -174.71  |proj g|=    6.1206e-06

iterations 24
function evaluations 38
segments explored during Cauchy searches 27
BFGS updates skipped 0
active bounds at final generalized Cauchy point 0
norm of the final projected gradient 6.12057e-06
final function value -174.71

F = -174.71
final  value -174.709720 
converged

* The 5 best values (multistart) obtained are:
 -174.7097 -174.6366 -174.7097 -174.7097 -174.7097 
* The model corresponding to the best one (-174.7097) is stored. 
Warning message:
executing %dopar% sequentially: no parallel backend registered 
>  
>  #plot(m)
>  #m
>  
>  #Return model paramaters
>  maxLL = -m@logLik
>  intercept = m@trend.coef
>  nugget = m@covariance@nugget
>  theta = m@covariance@range.val
>     model = data.frame(intercept, nugget, maxLL, theta)
> 
>  #Cross validation (leave one out)
>  LOO = leaveOneOut.km(m, "SK",trend.reestim = TRUE)
>  
>  
> ## Kriging prediction surface ##
> x = seq(from = 0, to = (sizexy[1,2]-1)*40, by = 40)
> y = seq(from = 0, to = (sizexy[1,1]-1)*40, by = 40)
> grid = expand.grid(X1=x, X2 = y)
> pred.m = predict(m,grid,"SK")
> 
> 
> pred = matrix(pred.m$mean, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> lower95 = matrix(pred.m$lower95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> upper95 = matrix(pred.m$upper95, sizexy[1,1], sizexy[1,2], byrow = TRUE)
> 
> 
> writeMat('/home/glaciology1/Documents/Data/SnowDepth/Kriging/kriging.mat',
+          pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
+          fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> #  writeMat('/Users/Alexandra/Documents/SFU/Data/SnowDepth/Kriging/kriging.mat',
> #           pred=pred, lower95=lower95, upper95=upper95, model = model, LOO = LOO,
> #           fixNames=TRUE, matVersion="5", onWrite=NULL, verbose=FALSE)
> 
> ## Install and load rgl package
> #library(rgl)
> 
> ## Plot surface and observations
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean,length(x),length(y)),col="light blue", alpha=0.5)
> 
> ## Plot surface and observations with intervals
> #  rglwidget()
> #plot3d(utm[,1],utm[,2],res, xlim=c(0,3000),ylim=c(0,3000),zlim=0:1)
> #surface3d(x,y, matrix(pred.m$mean, sizexy[1,1], sizexy[1,2]),col="light blue", alpha=0.5)
> #surface3d(x.grid,x.grid, matrix(pred.m$upper95,n.grid,n.grid),col="light blue", alpha=0.25)
> #surface3d(x.grid,x.grid, matrix(pred.m$lower95,n.grid,n.grid),col="light blue", alpha=0.25)
> #rgl.snapshot("filename.png")
> 
> proc.time()
   user  system elapsed 
  2.280   3.040   5.321 
